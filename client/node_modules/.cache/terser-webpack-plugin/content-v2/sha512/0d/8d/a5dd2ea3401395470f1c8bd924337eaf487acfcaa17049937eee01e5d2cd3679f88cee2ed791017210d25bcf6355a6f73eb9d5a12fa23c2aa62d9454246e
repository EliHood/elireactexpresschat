{"map":"{\"version\":3,\"sources\":[\"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/poweruser/Applications/nodework/eliappchat/client/src/logo.svg\",\"/Users/poweruser/Applications/nodework/eliappchat/client/src/Chat.js\",\"/Users/poweruser/Applications/nodework/eliappchat/client/src/App.js\",\"/Users/poweruser/Applications/nodework/eliappchat/client/src/serviceWorker.js\",\"/Users/poweruser/Applications/nodework/eliappchat/client/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Chat\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"username\",\"message\",\"messages\",\"socket\",\"socketIOClient\",\"on\",\"data\",\"addMessage\",\"sendMessage\",\"ev\",\"preventDefault\",\"emit\",\"author\",\"setState\",\"console\",\"log\",\"toConsumableArray\",\"concat\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"className\",\"map\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"onClick\",\"React\",\"Component\",\"App\",\"src_Chat\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"wJAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0MC0FzBC,cArFd,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACZC,SAAU,GACVC,QAAS,GACTC,SAAU,IAIXV,EAAKW,OAASC,GAAAA,CAAe,kBAEvBZ,EAAKW,OAAOE,GAAG,kBAAmB,SAASC,GACvCC,EAAWD,KAIfd,EAAKgB,YAAc,SAAAC,GACfA,EAAGC,iBACHlB,EAAKW,OAAOQ,KAAK,eAAgB,CAC7BC,OAAQpB,EAAKO,MAAMC,SACnBC,QAAST,EAAKO,MAAME,UAGxBT,EAAKqB,SAAS,CAACZ,QAAS,MAG5B,IAAMM,EAAa,SAAAD,GACfQ,QAAQC,IAAIT,GACZd,EAAKqB,SAAS,CAACX,SAAST,OAAAuB,EAAA,EAAAvB,CAAKD,EAAKO,MAAMG,UAAjBe,OAAA,CAA2BX,MAClDQ,QAAQC,IAAIvB,EAAKO,MAAMG,WA9BhB,OAAAV,wEAwCV,IAAA0B,EAAAvB,KACP,OAEEwB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACNH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAd,0BACGH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAEd3B,KAAKI,MAAMG,SAASqB,IAAI,SAAAtB,GACxB,OACCkB,EAAAC,EAAAC,cAAA,MAAA,KAAMpB,EAAQW,OAAd,KAAwBX,EAAQA,aAQtCkB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACPH,EAAAC,EAAAC,cAAA,QAAA,CAAOG,KAAK,OAAOC,YAAY,WAAWC,MAAO/B,KAAKI,MAAMC,SAAU2B,SAAU,SAAAlB,GAAE,OAAIS,EAAKL,SAAS,CAACb,SAAUS,EAAGmB,OAAOF,SAASJ,UAAU,iBAC5IH,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,QAAA,CAAOG,KAAK,OAAOC,YAAY,UAAWC,MAAO/B,KAAKI,MAAME,QAAS0B,SAAU,SAAAlB,GAAE,OAAIS,EAAKL,SAAS,CAACZ,QAASQ,EAAGmB,OAAOF,SAASJ,UAAU,iBAC1IH,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,SAAA,CAAQQ,QAASlC,KAAKa,YAAac,UAAU,gCAA7C,oBAtEjBQ,EAAAA,EAAMC,WCcVC,gMATX,OACEb,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACY,EAAD,cALUF,EAAAA,YCOEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport socketIOClient from \\\"socket.io-client\\\";\\n\\nclass Chat extends React.Component{\\n\\n\\tconstructor(props){\\n\\t\\tsuper(props);\\n\\n\\t\\tthis.state = {\\n\\t\\t\\tusername: '', \\n\\t\\t\\tmessage: '', \\n\\t\\t\\tmessages: []\\n\\t\\t};\\n\\n\\n\\t\\tthis.socket = socketIOClient('localhost:8080');\\n\\n        this.socket.on('RECEIVE_MESSAGE', function(data){\\n            addMessage(data);\\n        });\\n\\n\\n        this.sendMessage = ev =>{\\n            ev.preventDefault();\\n            this.socket.emit('SEND_MESSAGE', {\\n                author: this.state.username,\\n                message: this.state.message\\n            });\\n\\n            this.setState({message: ''});\\n        }\\n\\n        const addMessage = data => {\\n            console.log(data);\\n            this.setState({messages: [...this.state.messages, data]});\\n            console.log(this.state.messages);\\n        };\\n\\n\\n\\t}\\n\\n\\n\\n\\n\\n\\trender(){\\n\\t\\treturn(\\n\\n\\t\\t\\t <div className=\\\"chat\\\">\\n             <h3 className=\\\"chat_head\\\">Chat Demo Still Unsure</h3>\\n                <div className=\\\"container\\\">\\n                    <div className=\\\"row\\\">\\n                        <div className=\\\"card\\\">\\n                            <div className=\\\"card-body\\\">\\n                                \\n                                <hr/>\\n                                <div className=\\\"messages\\\">\\n\\n                                {this.state.messages.map(message => {\\n                                \\treturn(\\n                                \\t\\t<div>{message.author}: {message.message}</div>\\n\\n                                \\t);\\n                                })}\\n                                    \\n                                </div>\\n                                \\n                            </div>\\n                            <div className=\\\"card-footer\\\">\\n                                    <input type=\\\"text\\\" placeholder=\\\"Username\\\" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className=\\\"form-control\\\"/>\\n                                    <br/>\\n                                    <input type=\\\"text\\\" placeholder=\\\"Message\\\"  value={this.state.message} onChange={ev => this.setState({message: ev.target.value})} className=\\\"form-control\\\"/>\\n                                    <br/>\\n                                    <button onClick={this.sendMessage} className=\\\"btn btn-primary form-control\\\">Send</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\t\\t\\n\\n\\t\\t);\\n\\t}\\n\\n\\n}\\n\\nexport default Chat;\",\"import React, { Component } from 'react';\\nimport Chat from './Chat';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render(){\\n\\n    return(\\n      <div>\\n        <Chat />\\n      </div>\\n\\n     );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{34:function(e,t,a){e.exports=a(70)},39:function(e,t,a){},64:function(e,t){},67:function(e,t,a){e.exports=a.p+\"static/media/logo.5d5d9eef.svg\"},68:function(e,t,a){},70:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),c=a(31),r=a.n(c),o=(a(39),a(8)),l=a(9),i=a(11),m=a(10),u=a(12),d=a(33),h=a(32),g=a.n(h),E=function(e){function t(e){var a;Object(o.a)(this,t),(a=Object(i.a)(this,Object(m.a)(t).call(this,e))).state={username:\"\",message:\"\",messages:[]},a.socket=g()(\"localhost:8080\"),a.socket.on(\"RECEIVE_MESSAGE\",function(e){n(e)}),a.sendMessage=function(e){e.preventDefault(),a.socket.emit(\"SEND_MESSAGE\",{author:a.state.username,message:a.state.message}),a.setState({message:\"\"})};var n=function(e){console.log(e),a.setState({messages:Object(d.a)(a.state.messages).concat([e])}),console.log(a.state.messages)};return a}return Object(u.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"chat\"},s.a.createElement(\"h3\",{className:\"chat_head\"},\"Chat Demo Still Unsure\"),s.a.createElement(\"div\",{className:\"container\"},s.a.createElement(\"div\",{className:\"row\"},s.a.createElement(\"div\",{className:\"card\"},s.a.createElement(\"div\",{className:\"card-body\"},s.a.createElement(\"hr\",null),s.a.createElement(\"div\",{className:\"messages\"},this.state.messages.map(function(e){return s.a.createElement(\"div\",null,e.author,\": \",e.message)}))),s.a.createElement(\"div\",{className:\"card-footer\"},s.a.createElement(\"input\",{type:\"text\",placeholder:\"Username\",value:this.state.username,onChange:function(t){return e.setState({username:t.target.value})},className:\"form-control\"}),s.a.createElement(\"br\",null),s.a.createElement(\"input\",{type:\"text\",placeholder:\"Message\",value:this.state.message,onChange:function(t){return e.setState({message:t.target.value})},className:\"form-control\"}),s.a.createElement(\"br\",null),s.a.createElement(\"button\",{onClick:this.sendMessage,className:\"btn btn-primary form-control\"},\"Send\"))))))}}]),t}(s.a.Component),f=(a(67),a(68),function(e){function t(){return Object(o.a)(this,t),Object(i.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"div\",null,s.a.createElement(E,null))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(s.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[34,2,1]]]);","extractedComments":[]}