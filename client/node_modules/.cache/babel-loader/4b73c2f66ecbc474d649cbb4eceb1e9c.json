{"ast":null,"code":"import _toConsumableArray from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/poweruser/Applications/nodework/eliappchat/client/src/Chat.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    var chatHistory = props.chatHistory;\n    _this.state = {\n      chatHistory: chatHistory,\n      username: '',\n      message: '',\n      messages: []\n    };\n    _this.onMessageReceived = _this.onMessageReceived.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateChatHistory = _this.updateChatHistory.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this has to be something other than localhost.\n\n    _this.socket = socketIOClient.connect('https://gentle-crag-23071.herokuapp.com', {\n      secure: true\n    });\n\n    if (!_this.socket) {\n      _this.socket = socketIOClient('localhost:5000');\n    }\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n\n      _this.socket.emit('SEND_MESSAGE', {\n        author: _this.state.username,\n        message: _this.state.message\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.registerHandler(this.onMessageReceived);\n      this.scrollChatToBottom();\n    }\n  }, {\n    key: \"onMessageReceived\",\n    value: function onMessageReceived(entry) {\n      console.log('onMessageReceived:', entry);\n      this.updateChatHistory(entry);\n    }\n  }, {\n    key: \"updateChatHistory\",\n    value: function updateChatHistory(entry) {\n      this.setState({\n        chatHistory: this.state.chatHistory.concat(entry)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"chat_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Chat Demo Still Unsure\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.chatHistory.map(function (message) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, message.author, \": \", message.message);\n      }), this.state.messages.map(function (message) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, message.author, \": \", message.message);\n      }))), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            username: ev.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        value: this.state.message,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            message: ev.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        className: \"btn btn-primary form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/poweruser/Applications/nodework/eliappchat/client/src/Chat.js"],"names":["React","Component","socketIOClient","Chat","props","chatHistory","state","username","message","messages","onMessageReceived","bind","updateChatHistory","socket","connect","secure","on","data","addMessage","sendMessage","ev","preventDefault","emit","author","setState","console","log","registerHandler","scrollChatToBottom","entry","concat","map","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nclass Chat extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n        const {chatHistory} = props\n\n\n\t\tthis.state = {\n            chatHistory,\n\t\t\tusername: '', \n\t\t\tmessage: '', \n\t\t\tmessages: []\n\t\t};\n        this.onMessageReceived = this.onMessageReceived.bind(this)\n        this.updateChatHistory = this.updateChatHistory.bind(this)\n\n        // this has to be something other than localhost.\n\n\t\tthis.socket = socketIOClient.connect('https://gentle-crag-23071.herokuapp.com', {secure: true});\n\n       if(!this.socket){\n            this.socket = socketIOClient('localhost:5000');\n       }\n\n        this.socket.on('RECEIVE_MESSAGE', function(data){\n            addMessage(data);\n        });\n\n        this.sendMessage = ev =>{\n            ev.preventDefault();\n            this.socket.emit('SEND_MESSAGE', {\n                author: this.state.username,\n                message: this.state.message\n            });\n\n            this.setState({message: ''});\n        }\n\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n\n\n\t}\n\n      componentDidMount() {\n        this.props.registerHandler(this.onMessageReceived)\n        this.scrollChatToBottom()\n      }\n\n     onMessageReceived(entry) {\n        console.log('onMessageReceived:', entry)\n        this.updateChatHistory(entry)\n      }\n\n\n       updateChatHistory(entry) {\n           this.setState({ chatHistory: this.state.chatHistory.concat(entry) })\n       }\n\n\n\n\n\n\trender(){\n\t\treturn(\n\n\t\t\t <div className=\"chat\">\n             <h3 className=\"chat_head\">Chat Demo Still Unsure</h3>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                \n                                <hr/>\n                                <div className=\"messages\">\n\n                                {this.state.chatHistory.map(message => {\n                                    return(\n                                        <div>{message.author}: {message.message}</div>\n\n                                    );\n                                })}\n\n\n                                {this.state.messages.map(message => {\n                                \treturn(\n                                \t\t<div>{message.author}: {message.message}</div>\n\n                                \t);\n                                })}\n                                    \n                                </div>\n                                \n                            </div>\n                            <div className=\"card-footer\">\n                                    <input type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className=\"form-control\"/>\n                                    <br/>\n                                    <input type=\"text\" placeholder=\"Message\"  value={this.state.message} onChange={ev => this.setState({message: ev.target.value})} className=\"form-control\"/>\n                                    <br/>\n                                    <button onClick={this.sendMessage} className=\"btn btn-primary form-control\">Send</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\t\t\n\n\t\t);\n\t}\n\n\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}