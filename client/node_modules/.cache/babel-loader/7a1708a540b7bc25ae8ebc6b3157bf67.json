{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // identity function for calling harmony imports with the correct context\n\n  /******/\n\n  __webpack_require__.i = function (value) {\n    return value;\n  };\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        /******/\n        configurable: false,\n\n        /******/\n        enumerable: true,\n\n        /******/\n        get: getter\n        /******/\n\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 3);\n  /******/\n}(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (global) {\n    var assign = make_assign();\n    var create = make_create();\n    var trim = make_trim();\n    var Global = typeof window !== 'undefined' ? window : global;\n    module.exports = {\n      assign: assign,\n      create: create,\n      trim: trim,\n      bind: bind,\n      slice: slice,\n      each: each,\n      map: map,\n      pluck: pluck,\n      isList: isList,\n      isFunction: isFunction,\n      isObject: isObject,\n      Global: Global\n    };\n\n    function make_assign() {\n      if (Object.assign) {\n        return Object.assign;\n      } else {\n        return function shimAssign(obj, props1, props2, etc) {\n          for (var i = 1; i < arguments.length; i++) {\n            each(Object(arguments[i]), function (val, key) {\n              obj[key] = val;\n            });\n          }\n\n          return obj;\n        };\n      }\n    }\n\n    function make_create() {\n      if (Object.create) {\n        return function create(obj, assignProps1, assignProps2, etc) {\n          var assignArgsList = slice(arguments, 1);\n          return assign.apply(this, [Object.create(obj)].concat(assignArgsList));\n        };\n      } else {\n        var F = function F() {}; // eslint-disable-line no-inner-declarations\n\n\n        return function create(obj, assignProps1, assignProps2, etc) {\n          var assignArgsList = slice(arguments, 1);\n          F.prototype = obj;\n          return assign.apply(this, [new F()].concat(assignArgsList));\n        };\n      }\n    }\n\n    function make_trim() {\n      if (String.prototype.trim) {\n        return function trim(str) {\n          return String.prototype.trim.call(str);\n        };\n      } else {\n        return function trim(str) {\n          return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        };\n      }\n    }\n\n    function bind(obj, fn) {\n      return function () {\n        return fn.apply(obj, Array.prototype.slice.call(arguments, 0));\n      };\n    }\n\n    function slice(arr, index) {\n      return Array.prototype.slice.call(arr, index || 0);\n    }\n\n    function each(obj, fn) {\n      pluck(obj, function (val, key) {\n        fn(val, key);\n        return false;\n      });\n    }\n\n    function map(obj, fn) {\n      var res = isList(obj) ? [] : {};\n      pluck(obj, function (v, k) {\n        res[k] = fn(v, k);\n        return false;\n      });\n      return res;\n    }\n\n    function pluck(obj, fn) {\n      if (isList(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n          if (fn(obj[i], i)) {\n            return obj[i];\n          }\n        }\n      } else {\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (fn(obj[key], key)) {\n              return obj[key];\n            }\n          }\n        }\n      }\n    }\n\n    function isList(val) {\n      return val != null && typeof val != 'function' && typeof val.length == 'number';\n    }\n\n    function isFunction(val) {\n      return val && {}.toString.call(val) === '[object Function]';\n    }\n\n    function isObject(val) {\n      return val && {}.toString.call(val) === '[object Object]';\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(14));\n  /***/\n},\n/* 1 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var engine = __webpack_require__(6);\n\n  var storages = __webpack_require__(7);\n\n  var plugins = [__webpack_require__(4)];\n  module.exports = engine.createStore(storages, plugins);\n  /***/\n},\n/* 2 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react\");\n  /***/\n},\n/* 3 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  exports.clearStorage = clearStorage;\n  exports.resetParentState = resetParentState;\n\n  var _react = __webpack_require__(2);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _store = __webpack_require__(1);\n\n  var _store2 = _interopRequireDefault(_store);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SimpleStorage = function (_Component) {\n    _inherits(SimpleStorage, _Component);\n\n    function SimpleStorage(props) {\n      _classCallCheck(this, SimpleStorage);\n\n      var _this = _possibleConstructorReturn(this, (SimpleStorage.__proto__ || Object.getPrototypeOf(SimpleStorage)).call(this, props));\n\n      _this.state = {\n        didHydrate: false,\n        firedHydrateCallback: false\n      };\n      _this.testStorage = _testStorage.bind(_this);\n      return _this;\n    }\n\n    _createClass(SimpleStorage, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.testStorage() === true) {\n          this.hydrateStateWithStorage();\n          window.addEventListener(\"pagehide\", this.saveStateToStorage.bind(this));\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this.testStorage() === true) {\n          this.saveStateToStorage();\n          window.removeEventListener(\"pagehide\", this.saveStateToStorage.bind(this));\n        }\n      }\n    }, {\n      key: \"testStorage\",\n      value: function testStorage() {\n        var test = \"test\";\n\n        try {\n          _store2.default.set(test, test);\n\n          _store2.default.remove(test);\n\n          return true;\n        } catch (e) {\n          console.error(\"react-simple-storage could not access web storage.\");\n          return false;\n        }\n      }\n    }, {\n      key: \"hydrateStateWithStorage\",\n      value: function hydrateStateWithStorage() {\n        var prefix = \"\";\n        var parent = {};\n\n        if (this.props.parent) {\n          parent = this.props.parent;\n          prefix = this.props.prefix ? this.props.prefix : \"\";\n        } else {\n          console.error(\"No \\\"parent\\\" prop was provided to react-simple-storage. A parent component's context is required in order to access and update the parent component's state.\\n\\t\\t\\t\\nTry the following: <SimpleStorage parent={this} />\");\n          return false;\n        } // loop through storage\n\n\n        _store2.default.each(function (value, key) {\n          // if the storage item is in the current parent's state\n          if (key.includes(prefix)) {\n            // remove the parent-specific prefix to get original key from parent's state\n            var name = key.slice(prefix.length + 1); // update parent's state with the result\n            // store.js handles parsing\n\n            var parsedValue = void 0;\n\n            if (name in parent.state) {\n              try {\n                parsedValue = JSON.parse(value);\n                parent.setState(_defineProperty({}, name, parsedValue));\n              } catch (e) {\n                parent.setState(_defineProperty({}, name, value));\n              }\n            }\n          }\n        });\n\n        this.setState({\n          didHydrate: true\n        });\n      }\n    }, {\n      key: \"saveStateToStorage\",\n      value: function saveStateToStorage() {\n        var allowNewKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var prefix = \"\";\n        var parent = {};\n        var blacklist = [];\n\n        if (this.props.parent) {\n          prefix = this.props.prefix ? this.props.prefix : \"\";\n          parent = this.props.parent;\n          blacklist = this.props.blacklist || [];\n        } else {\n          console.error(\"No \\\"parent\\\" prop was provided to react-simple-storage. A parent component's context is required in order to access and update the parent component's state.\\n      \\nTry the following: <SimpleStorage parent={this} />\");\n          return false;\n        } // loop through all of the parent's state\n\n\n        for (var key in parent.state) {\n          // save item to storage if not on the blacklist\n          var prefixWithKey = prefix + \"_\" + key;\n\n          if (blacklist.indexOf(key) < 0 && allowNewKey) {\n            _store2.default.set(prefixWithKey, parent.state[key]);\n          }\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return null;\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        // callback function that fires after the parent's state has been hydrated with storage items\n        if ('onParentStateHydrated' in props && state.didHydrate && !state.firedHydrateCallback) {\n          props.onParentStateHydrated();\n          return _extends({}, state, {\n            firedHydrateCallback: true\n          });\n        }\n\n        return state;\n      }\n    }]);\n\n    return SimpleStorage;\n  }(_react.Component);\n\n  exports.default = SimpleStorage;\n\n  function _testStorage() {\n    var test = \"test\";\n\n    try {\n      _store2.default.set(test, test);\n\n      _store2.default.remove(test);\n\n      return true;\n    } catch (e) {\n      console.error(\"react-simple-storage could not access any storage options.\");\n      return false;\n    }\n  }\n\n  function clearStorage(prefix) {\n    if (_testStorage() === true) {\n      _store2.default.each(function (value, key) {\n        if (key.includes(prefix)) {\n          _store2.default.remove(key);\n        }\n      });\n    }\n  }\n\n  function resetParentState(parent) {\n    var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var keysToIgnore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    if (_testStorage() === true) {\n      for (var key in initialState) {\n        // reset property if not in keys to ignore\n        if (keysToIgnore.indexOf(key) < 0) {\n          parent.setState(_defineProperty({}, key, initialState[key]));\n        }\n      }\n    }\n  }\n  /***/\n\n},\n/* 4 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  module.exports = json2Plugin;\n\n  function json2Plugin() {\n    __webpack_require__(5);\n\n    return {};\n  }\n  /***/\n\n},\n/* 5 */\n\n/***/\nfunction (module, exports) {\n  /* eslint-disable */\n  //  json2.js\n  //  2016-10-28\n  //  Public Domain.\n  //  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n  //  See http://www.JSON.org/js.html\n  //  This code should be minified before deployment.\n  //  See http://javascript.crockford.com/jsmin.html\n  //  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n  //  NOT CONTROL.\n  //  This file creates a global JSON object containing two methods: stringify\n  //  and parse. This file provides the ES5 JSON capability to ES3 systems.\n  //  If a project might run on IE8 or earlier, then this file should be included.\n  //  This file does nothing on ES5 systems.\n  //      JSON.stringify(value, replacer, space)\n  //          value       any JavaScript value, usually an object or array.\n  //          replacer    an optional parameter that determines how object\n  //                      values are stringified for objects. It can be a\n  //                      function or an array of strings.\n  //          space       an optional parameter that specifies the indentation\n  //                      of nested structures. If it is omitted, the text will\n  //                      be packed without extra whitespace. If it is a number,\n  //                      it will specify the number of spaces to indent at each\n  //                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n  //                      it contains the characters used to indent at each level.\n  //          This method produces a JSON text from a JavaScript value.\n  //          When an object value is found, if the object contains a toJSON\n  //          method, its toJSON method will be called and the result will be\n  //          stringified. A toJSON method does not serialize: it returns the\n  //          value represented by the name/value pair that should be serialized,\n  //          or undefined if nothing should be serialized. The toJSON method\n  //          will be passed the key associated with the value, and this will be\n  //          bound to the value.\n  //          For example, this would serialize Dates as ISO strings.\n  //              Date.prototype.toJSON = function (key) {\n  //                  function f(n) {\n  //                      // Format integers to have at least two digits.\n  //                      return (n < 10)\n  //                          ? \"0\" + n\n  //                          : n;\n  //                  }\n  //                  return this.getUTCFullYear()   + \"-\" +\n  //                       f(this.getUTCMonth() + 1) + \"-\" +\n  //                       f(this.getUTCDate())      + \"T\" +\n  //                       f(this.getUTCHours())     + \":\" +\n  //                       f(this.getUTCMinutes())   + \":\" +\n  //                       f(this.getUTCSeconds())   + \"Z\";\n  //              };\n  //          You can provide an optional replacer method. It will be passed the\n  //          key and value of each member, with this bound to the containing\n  //          object. The value that is returned from your method will be\n  //          serialized. If your method returns undefined, then the member will\n  //          be excluded from the serialization.\n  //          If the replacer parameter is an array of strings, then it will be\n  //          used to select the members to be serialized. It filters the results\n  //          such that only members with keys listed in the replacer array are\n  //          stringified.\n  //          Values that do not have JSON representations, such as undefined or\n  //          functions, will not be serialized. Such values in objects will be\n  //          dropped; in arrays they will be replaced with null. You can use\n  //          a replacer function to replace those with JSON values.\n  //          JSON.stringify(undefined) returns undefined.\n  //          The optional space parameter produces a stringification of the\n  //          value that is filled with line breaks and indentation to make it\n  //          easier to read.\n  //          If the space parameter is a non-empty string, then that string will\n  //          be used for indentation. If the space parameter is a number, then\n  //          the indentation will be that many spaces.\n  //          Example:\n  //          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n  //          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n  //          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n  //          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n  //          text = JSON.stringify([new Date()], function (key, value) {\n  //              return this[key] instanceof Date\n  //                  ? \"Date(\" + this[key] + \")\"\n  //                  : value;\n  //          });\n  //          // text is '[\"Date(---current time---)\"]'\n  //      JSON.parse(text, reviver)\n  //          This method parses a JSON text to produce an object or array.\n  //          It can throw a SyntaxError exception.\n  //          The optional reviver parameter is a function that can filter and\n  //          transform the results. It receives each of the keys and values,\n  //          and its return value is used instead of the original value.\n  //          If it returns what it received, then the structure is not modified.\n  //          If it returns undefined then the member is deleted.\n  //          Example:\n  //          // Parse the text. Values that look like ISO date strings will\n  //          // be converted to Date objects.\n  //          myData = JSON.parse(text, function (key, value) {\n  //              var a;\n  //              if (typeof value === \"string\") {\n  //                  a =\n  //   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n  //                  if (a) {\n  //                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n  //                          +a[5], +a[6]));\n  //                  }\n  //              }\n  //              return value;\n  //          });\n  //          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n  //              var d;\n  //              if (typeof value === \"string\" &&\n  //                      value.slice(0, 5) === \"Date(\" &&\n  //                      value.slice(-1) === \")\") {\n  //                  d = new Date(value.slice(5, -1));\n  //                  if (d) {\n  //                      return d;\n  //                  }\n  //              }\n  //              return value;\n  //          });\n  //  This is a reference implementation. You are free to copy, modify, or\n  //  redistribute.\n\n  /*jslint\n      eval, for, this\n  */\n\n  /*property\n      JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n      getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n      lastIndex, length, parse, prototype, push, replace, slice, stringify,\n      test, toJSON, toString, valueOf\n  */\n  // Create a JSON object only if one does not already exist. We create the\n  // methods in a closure to avoid creating global variables.\n  if (typeof JSON !== \"object\") {\n    JSON = {};\n  }\n\n  (function () {\n    \"use strict\";\n\n    var rx_one = /^[\\],:{}\\s]*$/;\n    var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n    var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n    var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n    var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n    var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n    function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? \"0\" + n : n;\n    }\n\n    function this_value() {\n      return this.valueOf();\n    }\n\n    if (typeof Date.prototype.toJSON !== \"function\") {\n      Date.prototype.toJSON = function () {\n        return isFinite(this.valueOf()) ? this.getUTCFullYear() + \"-\" + f(this.getUTCMonth() + 1) + \"-\" + f(this.getUTCDate()) + \"T\" + f(this.getUTCHours()) + \":\" + f(this.getUTCMinutes()) + \":\" + f(this.getUTCSeconds()) + \"Z\" : null;\n      };\n\n      Boolean.prototype.toJSON = this_value;\n      Number.prototype.toJSON = this_value;\n      String.prototype.toJSON = this_value;\n    }\n\n    var gap;\n    var indent;\n    var meta;\n    var rep;\n\n    function quote(string) {\n      // If the string contains no control characters, no quote characters, and no\n      // backslash characters, then we can safely slap some quotes around it.\n      // Otherwise we must also replace the offending characters with safe escape\n      // sequences.\n      rx_escapable.lastIndex = 0;\n      return rx_escapable.test(string) ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n        var c = meta[a];\n        return typeof c === \"string\" ? c : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + \"\\\"\" : \"\\\"\" + string + \"\\\"\";\n    }\n\n    function str(key, holder) {\n      // Produce a string from holder[key].\n      var i; // The loop counter.\n\n      var k; // The member key.\n\n      var v; // The member value.\n\n      var length;\n      var mind = gap;\n      var partial;\n      var value = holder[key]; // If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === \"object\" && typeof value.toJSON === \"function\") {\n        value = value.toJSON(key);\n      } // If we were called with a replacer function, then call the replacer to\n      // obtain a replacement value.\n\n\n      if (typeof rep === \"function\") {\n        value = rep.call(holder, key, value);\n      } // What happens next depends on the value's type.\n\n\n      switch (typeof value) {\n        case \"string\":\n          return quote(value);\n\n        case \"number\":\n          // JSON numbers must be finite. Encode non-finite numbers as null.\n          return isFinite(value) ? String(value) : \"null\";\n\n        case \"boolean\":\n        case \"null\":\n          // If the value is a boolean or null, convert it to a string. Note:\n          // typeof null does not produce \"null\". The case is included here in\n          // the remote chance that this gets fixed someday.\n          return String(value);\n        // If the type is \"object\", we might be dealing with an object or an array or\n        // null.\n\n        case \"object\":\n          // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n          // so watch out for that case.\n          if (!value) {\n            return \"null\";\n          } // Make an array to hold the partial results of stringifying this object value.\n\n\n          gap += indent;\n          partial = []; // Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n            // The value is an array. Stringify every element. Use null as a placeholder\n            // for non-JSON values.\n            length = value.length;\n\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || \"null\";\n            } // Join all of the elements together, separated with commas, and wrap them in\n            // brackets.\n\n\n            v = partial.length === 0 ? \"[]\" : gap ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\" : \"[\" + partial.join(\",\") + \"]\";\n            gap = mind;\n            return v;\n          } // If the replacer is an array, use it to select the members to be stringified.\n\n\n          if (rep && typeof rep === \"object\") {\n            length = rep.length;\n\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === \"string\") {\n                k = rep[i];\n                v = str(k, value);\n\n                if (v) {\n                  partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                }\n              }\n            }\n          } else {\n            // Otherwise, iterate through all of the keys in the object.\n            for (k in value) {\n              if (Object.prototype.hasOwnProperty.call(value, k)) {\n                v = str(k, value);\n\n                if (v) {\n                  partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                }\n              }\n            }\n          } // Join all of the member texts together, separated with commas,\n          // and wrap them in braces.\n\n\n          v = partial.length === 0 ? \"{}\" : gap ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\" : \"{\" + partial.join(\",\") + \"}\";\n          gap = mind;\n          return v;\n      }\n    } // If the JSON object does not yet have a stringify method, give it one.\n\n\n    if (typeof JSON.stringify !== \"function\") {\n      meta = {\n        // table of character substitutions\n        \"\\b\": \"\\\\b\",\n        \"\\t\": \"\\\\t\",\n        \"\\n\": \"\\\\n\",\n        \"\\f\": \"\\\\f\",\n        \"\\r\": \"\\\\r\",\n        \"\\\"\": \"\\\\\\\"\",\n        \"\\\\\": \"\\\\\\\\\"\n      };\n\n      JSON.stringify = function (value, replacer, space) {\n        // The stringify method takes a value and an optional replacer, and an optional\n        // space parameter, and returns a JSON text. The replacer can be a function\n        // that can replace values, or an array of strings that will select the keys.\n        // A default replacer method can be provided. Use of the space parameter can\n        // produce text that is more easily readable.\n        var i;\n        gap = \"\";\n        indent = \"\"; // If the space parameter is a number, make an indent string containing that\n        // many spaces.\n\n        if (typeof space === \"number\") {\n          for (i = 0; i < space; i += 1) {\n            indent += \" \";\n          } // If the space parameter is a string, it will be used as the indent string.\n\n        } else if (typeof space === \"string\") {\n          indent = space;\n        } // If there is a replacer, it must be a function or an array.\n        // Otherwise, throw an error.\n\n\n        rep = replacer;\n\n        if (replacer && typeof replacer !== \"function\" && (typeof replacer !== \"object\" || typeof replacer.length !== \"number\")) {\n          throw new Error(\"JSON.stringify\");\n        } // Make a fake root object containing our value under the key of \"\".\n        // Return the result of stringifying the value.\n\n\n        return str(\"\", {\n          \"\": value\n        });\n      };\n    } // If the JSON object does not yet have a parse method, give it one.\n\n\n    if (typeof JSON.parse !== \"function\") {\n      JSON.parse = function (text, reviver) {\n        // The parse method takes a text and an optional reviver function, and returns\n        // a JavaScript value if the text is a valid JSON text.\n        var j;\n\n        function walk(holder, key) {\n          // The walk method is used to recursively walk the resulting structure so\n          // that modifications can be made.\n          var k;\n          var v;\n          var value = holder[key];\n\n          if (value && typeof value === \"object\") {\n            for (k in value) {\n              if (Object.prototype.hasOwnProperty.call(value, k)) {\n                v = walk(value, k);\n\n                if (v !== undefined) {\n                  value[k] = v;\n                } else {\n                  delete value[k];\n                }\n              }\n            }\n          }\n\n          return reviver.call(holder, key, value);\n        } // Parsing happens in four stages. In the first stage, we replace certain\n        // Unicode characters with escape sequences. JavaScript handles many characters\n        // incorrectly, either silently deleting them, or treating them as line endings.\n\n\n        text = String(text);\n        rx_dangerous.lastIndex = 0;\n\n        if (rx_dangerous.test(text)) {\n          text = text.replace(rx_dangerous, function (a) {\n            return \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n          });\n        } // In the second stage, we run the text against regular expressions that look\n        // for non-JSON patterns. We are especially concerned with \"()\" and \"new\"\n        // because they can cause invocation, and \"=\" because it can cause mutation.\n        // But just to be safe, we want to reject all unexpected forms.\n        // We split the second stage into 4 regexp operations in order to work around\n        // crippling inefficiencies in IE's and Safari's regexp engines. First we\n        // replace the JSON backslash pairs with \"@\" (a non-JSON character). Second, we\n        // replace all simple value tokens with \"]\" characters. Third, we delete all\n        // open brackets that follow a colon or comma or that begin the text. Finally,\n        // we look to see that the remaining characters are only whitespace or \"]\" or\n        // \",\" or \":\" or \"{\" or \"}\". If that is so, then the text is safe for eval.\n\n\n        if (rx_one.test(text.replace(rx_two, \"@\").replace(rx_three, \"]\").replace(rx_four, \"\"))) {\n          // In the third stage we use the eval function to compile the text into a\n          // JavaScript structure. The \"{\" operator is subject to a syntactic ambiguity\n          // in JavaScript: it can begin a block or an object literal. We wrap the text\n          // in parens to eliminate the ambiguity.\n          j = eval(\"(\" + text + \")\"); // In the optional fourth stage, we recursively walk the new structure, passing\n          // each name/value pair to a reviver function for possible transformation.\n\n          return typeof reviver === \"function\" ? walk({\n            \"\": j\n          }, \"\") : j;\n        } // If the text is not JSON parseable, then a SyntaxError is thrown.\n\n\n        throw new SyntaxError(\"JSON.parse\");\n      };\n    }\n  })();\n  /***/\n\n},\n/* 6 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var util = __webpack_require__(0);\n\n  var slice = util.slice;\n  var pluck = util.pluck;\n  var each = util.each;\n  var bind = util.bind;\n  var create = util.create;\n  var isList = util.isList;\n  var isFunction = util.isFunction;\n  var isObject = util.isObject;\n  module.exports = {\n    createStore: _createStore\n  };\n  var storeAPI = {\n    version: '2.0.12',\n    enabled: false,\n    // get returns the value of the given key. If that value\n    // is undefined, it returns optionalDefaultValue instead.\n    get: function get(key, optionalDefaultValue) {\n      var data = this.storage.read(this._namespacePrefix + key);\n      return this._deserialize(data, optionalDefaultValue);\n    },\n    // set will store the given value at key and returns value.\n    // Calling set with value === undefined is equivalent to calling remove.\n    set: function set(key, value) {\n      if (value === undefined) {\n        return this.remove(key);\n      }\n\n      this.storage.write(this._namespacePrefix + key, this._serialize(value));\n      return value;\n    },\n    // remove deletes the key and value stored at the given key.\n    remove: function remove(key) {\n      this.storage.remove(this._namespacePrefix + key);\n    },\n    // each will call the given callback once for each key-value pair\n    // in this store.\n    each: function each(callback) {\n      var self = this;\n      this.storage.each(function (val, namespacedKey) {\n        callback.call(self, self._deserialize(val), (namespacedKey || '').replace(self._namespaceRegexp, ''));\n      });\n    },\n    // clearAll will remove all the stored key-value pairs in this store.\n    clearAll: function clearAll() {\n      this.storage.clearAll();\n    },\n    // additional functionality that can't live in plugins\n    // ---------------------------------------------------\n    // hasNamespace returns true if this store instance has the given namespace.\n    hasNamespace: function hasNamespace(namespace) {\n      return this._namespacePrefix == '__storejs_' + namespace + '_';\n    },\n    // createStore creates a store.js instance with the first\n    // functioning storage in the list of storage candidates,\n    // and applies the the given mixins to the instance.\n    createStore: function createStore() {\n      return _createStore.apply(this, arguments);\n    },\n    addPlugin: function addPlugin(plugin) {\n      this._addPlugin(plugin);\n    },\n    namespace: function namespace(_namespace) {\n      return _createStore(this.storage, this.plugins, _namespace);\n    }\n  };\n\n  function _warn() {\n    var _console = typeof console == 'undefined' ? null : console;\n\n    if (!_console) {\n      return;\n    }\n\n    var fn = _console.warn ? _console.warn : _console.log;\n    fn.apply(_console, arguments);\n  }\n\n  function _createStore(storages, plugins, namespace) {\n    if (!namespace) {\n      namespace = '';\n    }\n\n    if (storages && !isList(storages)) {\n      storages = [storages];\n    }\n\n    if (plugins && !isList(plugins)) {\n      plugins = [plugins];\n    }\n\n    var namespacePrefix = namespace ? '__storejs_' + namespace + '_' : '';\n    var namespaceRegexp = namespace ? new RegExp('^' + namespacePrefix) : null;\n    var legalNamespaces = /^[a-zA-Z0-9_\\-]*$/; // alpha-numeric + underscore and dash\n\n    if (!legalNamespaces.test(namespace)) {\n      throw new Error('store.js namespaces can only have alphanumerics + underscores and dashes');\n    }\n\n    var _privateStoreProps = {\n      _namespacePrefix: namespacePrefix,\n      _namespaceRegexp: namespaceRegexp,\n      _testStorage: function _testStorage(storage) {\n        try {\n          var testStr = '__storejs__test__';\n          storage.write(testStr, testStr);\n          var ok = storage.read(testStr) === testStr;\n          storage.remove(testStr);\n          return ok;\n        } catch (e) {\n          return false;\n        }\n      },\n      _assignPluginFnProp: function _assignPluginFnProp(pluginFnProp, propName) {\n        var oldFn = this[propName];\n\n        this[propName] = function pluginFn() {\n          var args = slice(arguments, 0);\n          var self = this; // super_fn calls the old function which was overwritten by\n          // this mixin.\n\n          function super_fn() {\n            if (!oldFn) {\n              return;\n            }\n\n            each(arguments, function (arg, i) {\n              args[i] = arg;\n            });\n            return oldFn.apply(self, args);\n          } // Give mixing function access to super_fn by prefixing all mixin function\n          // arguments with super_fn.\n\n\n          var newFnArgs = [super_fn].concat(args);\n          return pluginFnProp.apply(self, newFnArgs);\n        };\n      },\n      _serialize: function _serialize(obj) {\n        return JSON.stringify(obj);\n      },\n      _deserialize: function _deserialize(strVal, defaultVal) {\n        if (!strVal) {\n          return defaultVal;\n        } // It is possible that a raw string value has been previously stored\n        // in a storage without using store.js, meaning it will be a raw\n        // string value instead of a JSON serialized string. By defaulting\n        // to the raw string value in case of a JSON parse error, we allow\n        // for past stored values to be forwards-compatible with store.js\n\n\n        var val = '';\n\n        try {\n          val = JSON.parse(strVal);\n        } catch (e) {\n          val = strVal;\n        }\n\n        return val !== undefined ? val : defaultVal;\n      },\n      _addStorage: function _addStorage(storage) {\n        if (this.enabled) {\n          return;\n        }\n\n        if (this._testStorage(storage)) {\n          this.storage = storage;\n          this.enabled = true;\n        }\n      },\n      _addPlugin: function _addPlugin(plugin) {\n        var self = this; // If the plugin is an array, then add all plugins in the array.\n        // This allows for a plugin to depend on other plugins.\n\n        if (isList(plugin)) {\n          each(plugin, function (plugin) {\n            self._addPlugin(plugin);\n          });\n          return;\n        } // Keep track of all plugins we've seen so far, so that we\n        // don't add any of them twice.\n\n\n        var seenPlugin = pluck(this.plugins, function (seenPlugin) {\n          return plugin === seenPlugin;\n        });\n\n        if (seenPlugin) {\n          return;\n        }\n\n        this.plugins.push(plugin); // Check that the plugin is properly formed\n\n        if (!isFunction(plugin)) {\n          throw new Error('Plugins must be function values that return objects');\n        }\n\n        var pluginProperties = plugin.call(this);\n\n        if (!isObject(pluginProperties)) {\n          throw new Error('Plugins must return an object of function properties');\n        } // Add the plugin function properties to this store instance.\n\n\n        each(pluginProperties, function (pluginFnProp, propName) {\n          if (!isFunction(pluginFnProp)) {\n            throw new Error('Bad plugin property: ' + propName + ' from plugin ' + plugin.name + '. Plugins should only return functions.');\n          }\n\n          self._assignPluginFnProp(pluginFnProp, propName);\n        });\n      },\n      // Put deprecated properties in the private API, so as to not expose it to accidential\n      // discovery through inspection of the store object.\n      // Deprecated: addStorage\n      addStorage: function addStorage(storage) {\n        _warn('store.addStorage(storage) is deprecated. Use createStore([storages])');\n\n        this._addStorage(storage);\n      }\n    };\n    var store = create(_privateStoreProps, storeAPI, {\n      plugins: []\n    });\n    store.raw = {};\n    each(store, function (prop, propName) {\n      if (isFunction(prop)) {\n        store.raw[propName] = bind(store, prop);\n      }\n    });\n    each(storages, function (storage) {\n      store._addStorage(storage);\n    });\n    each(plugins, function (plugin) {\n      store._addPlugin(plugin);\n    });\n    return store;\n  }\n  /***/\n\n},\n/* 7 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  module.exports = [// Listed in order of usage preference\n  __webpack_require__(9), __webpack_require__(11), __webpack_require__(12), __webpack_require__(8), __webpack_require__(13), __webpack_require__(10)];\n  /***/\n},\n/* 8 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // cookieStorage is useful Safari private browser mode, where localStorage\n  // doesn't work but cookies do. This implementation is adopted from\n  // https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\n  var util = __webpack_require__(0);\n\n  var Global = util.Global;\n  var trim = util.trim;\n  module.exports = {\n    name: 'cookieStorage',\n    read: read,\n    write: write,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n  var doc = Global.document;\n\n  function read(key) {\n    if (!key || !_has(key)) {\n      return null;\n    }\n\n    var regexpStr = \"(?:^|.*;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\";\n    return unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"));\n  }\n\n  function each(callback) {\n    var cookies = doc.cookie.split(/; ?/g);\n\n    for (var i = cookies.length - 1; i >= 0; i--) {\n      if (!trim(cookies[i])) {\n        continue;\n      }\n\n      var kvp = cookies[i].split('=');\n      var key = unescape(kvp[0]);\n      var val = unescape(kvp[1]);\n      callback(val, key);\n    }\n  }\n\n  function write(key, data) {\n    if (!key) {\n      return;\n    }\n\n    doc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\";\n  }\n\n  function remove(key) {\n    if (!key || !_has(key)) {\n      return;\n    }\n\n    doc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n  }\n\n  function clearAll() {\n    each(function (_, key) {\n      remove(key);\n    });\n  }\n\n  function _has(key) {\n    return new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\").test(doc.cookie);\n  }\n  /***/\n\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var util = __webpack_require__(0);\n\n  var Global = util.Global;\n  module.exports = {\n    name: 'localStorage',\n    read: read,\n    write: write,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n\n  function localStorage() {\n    return Global.localStorage;\n  }\n\n  function read(key) {\n    return localStorage().getItem(key);\n  }\n\n  function write(key, data) {\n    return localStorage().setItem(key, data);\n  }\n\n  function each(fn) {\n    for (var i = localStorage().length - 1; i >= 0; i--) {\n      var key = localStorage().key(i);\n      fn(read(key), key);\n    }\n  }\n\n  function remove(key) {\n    return localStorage().removeItem(key);\n  }\n\n  function clearAll() {\n    return localStorage().clear();\n  }\n  /***/\n\n},\n/* 10 */\n\n/***/\nfunction (module, exports) {\n  // memoryStorage is a useful last fallback to ensure that the store\n  // is functions (meaning store.get(), store.set(), etc will all function).\n  // However, stored values will not persist when the browser navigates to\n  // a new page or reloads the current page.\n  module.exports = {\n    name: 'memoryStorage',\n    read: read,\n    write: write,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n  var memoryStorage = {};\n\n  function read(key) {\n    return memoryStorage[key];\n  }\n\n  function write(key, data) {\n    memoryStorage[key] = data;\n  }\n\n  function each(callback) {\n    for (var key in memoryStorage) {\n      if (memoryStorage.hasOwnProperty(key)) {\n        callback(memoryStorage[key], key);\n      }\n    }\n  }\n\n  function remove(key) {\n    delete memoryStorage[key];\n  }\n\n  function clearAll(key) {\n    memoryStorage = {};\n  }\n  /***/\n\n},\n/* 11 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // oldFF-globalStorage provides storage for Firefox\n  // versions 6 and 7, where no localStorage, etc\n  // is available.\n  var util = __webpack_require__(0);\n\n  var Global = util.Global;\n  module.exports = {\n    name: 'oldFF-globalStorage',\n    read: read,\n    write: write,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n  var globalStorage = Global.globalStorage;\n\n  function read(key) {\n    return globalStorage[key];\n  }\n\n  function write(key, data) {\n    globalStorage[key] = data;\n  }\n\n  function each(fn) {\n    for (var i = globalStorage.length - 1; i >= 0; i--) {\n      var key = globalStorage.key(i);\n      fn(globalStorage[key], key);\n    }\n  }\n\n  function remove(key) {\n    return globalStorage.removeItem(key);\n  }\n\n  function clearAll() {\n    each(function (key, _) {\n      delete globalStorage[key];\n    });\n  }\n  /***/\n\n},\n/* 12 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  // oldIE-userDataStorage provides storage for Internet Explorer\n  // versions 6 and 7, where no localStorage, sessionStorage, etc\n  // is available.\n  var util = __webpack_require__(0);\n\n  var Global = util.Global;\n  module.exports = {\n    name: 'oldIE-userDataStorage',\n    write: write,\n    read: read,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n  var storageName = 'storejs';\n  var doc = Global.document;\n\n  var _withStorageEl = _makeIEStorageElFunction();\n\n  var disable = (Global.navigator ? Global.navigator.userAgent : '').match(/ (MSIE 8|MSIE 9|MSIE 10)\\./); // MSIE 9.x, MSIE 10.x\n\n  function write(unfixedKey, data) {\n    if (disable) {\n      return;\n    }\n\n    var fixedKey = fixKey(unfixedKey);\n\n    _withStorageEl(function (storageEl) {\n      storageEl.setAttribute(fixedKey, data);\n      storageEl.save(storageName);\n    });\n  }\n\n  function read(unfixedKey) {\n    if (disable) {\n      return;\n    }\n\n    var fixedKey = fixKey(unfixedKey);\n    var res = null;\n\n    _withStorageEl(function (storageEl) {\n      res = storageEl.getAttribute(fixedKey);\n    });\n\n    return res;\n  }\n\n  function each(callback) {\n    _withStorageEl(function (storageEl) {\n      var attributes = storageEl.XMLDocument.documentElement.attributes;\n\n      for (var i = attributes.length - 1; i >= 0; i--) {\n        var attr = attributes[i];\n        callback(storageEl.getAttribute(attr.name), attr.name);\n      }\n    });\n  }\n\n  function remove(unfixedKey) {\n    var fixedKey = fixKey(unfixedKey);\n\n    _withStorageEl(function (storageEl) {\n      storageEl.removeAttribute(fixedKey);\n      storageEl.save(storageName);\n    });\n  }\n\n  function clearAll() {\n    _withStorageEl(function (storageEl) {\n      var attributes = storageEl.XMLDocument.documentElement.attributes;\n      storageEl.load(storageName);\n\n      for (var i = attributes.length - 1; i >= 0; i--) {\n        storageEl.removeAttribute(attributes[i].name);\n      }\n\n      storageEl.save(storageName);\n    });\n  } // Helpers\n  //////////\n  // In IE7, keys cannot start with a digit or contain certain chars.\n  // See https://github.com/marcuswestin/store.js/issues/40\n  // See https://github.com/marcuswestin/store.js/issues/83\n\n\n  var forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\");\n\n  function fixKey(key) {\n    return key.replace(/^\\d/, '___$&').replace(forbiddenCharsRegex, '___');\n  }\n\n  function _makeIEStorageElFunction() {\n    if (!doc || !doc.documentElement || !doc.documentElement.addBehavior) {\n      return null;\n    }\n\n    var scriptTag = 'script',\n        storageOwner,\n        storageContainer,\n        storageEl; // Since #userData storage applies only to specific paths, we need to\n    // somehow link our data to a specific path.  We choose /favicon.ico\n    // as a pretty safe option, since all browsers already make a request to\n    // this URL anyway and being a 404 will not hurt us here.  We wrap an\n    // iframe pointing to the favicon in an ActiveXObject(htmlfile) object\n    // (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\n    // since the iframe access rules appear to allow direct access and\n    // manipulation of the document element, even for a 404 page.  This\n    // document can be used instead of the current document (which would\n    // have been limited to the current path) to perform #userData storage.\n\n    try {\n      /* global ActiveXObject */\n      storageContainer = new ActiveXObject('htmlfile');\n      storageContainer.open();\n      storageContainer.write('<' + scriptTag + '>document.w=window</' + scriptTag + '><iframe src=\"/favicon.ico\"></iframe>');\n      storageContainer.close();\n      storageOwner = storageContainer.w.frames[0].document;\n      storageEl = storageOwner.createElement('div');\n    } catch (e) {\n      // somehow ActiveXObject instantiation failed (perhaps some special\n      // security settings or otherwse), fall back to per-path storage\n      storageEl = doc.createElement('div');\n      storageOwner = doc.body;\n    }\n\n    return function (storeFunction) {\n      var args = [].slice.call(arguments, 0);\n      args.unshift(storageEl); // See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\n      // and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\n\n      storageOwner.appendChild(storageEl);\n      storageEl.addBehavior('#default#userData');\n      storageEl.load(storageName);\n      storeFunction.apply(this, args);\n      storageOwner.removeChild(storageEl);\n      return;\n    };\n  }\n  /***/\n\n},\n/* 13 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var util = __webpack_require__(0);\n\n  var Global = util.Global;\n  module.exports = {\n    name: 'sessionStorage',\n    read: read,\n    write: write,\n    each: each,\n    remove: remove,\n    clearAll: clearAll\n  };\n\n  function sessionStorage() {\n    return Global.sessionStorage;\n  }\n\n  function read(key) {\n    return sessionStorage().getItem(key);\n  }\n\n  function write(key, data) {\n    return sessionStorage().setItem(key, data);\n  }\n\n  function each(fn) {\n    for (var i = sessionStorage().length - 1; i >= 0; i--) {\n      var key = sessionStorage().key(i);\n      fn(read(key), key);\n    }\n  }\n\n  function remove(key) {\n    return sessionStorage().removeItem(key);\n  }\n\n  function clearAll() {\n    return sessionStorage().clear();\n  }\n  /***/\n\n},\n/* 14 */\n\n/***/\nfunction (module, exports) {\n  var g; // This works in non-strict mode\n\n  g = function () {\n    return this;\n  }();\n\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || Function(\"return this\")() || (1, eval)(\"this\");\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") g = window;\n  } // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n\n  module.exports = g;\n  /***/\n}]);","map":null,"metadata":{},"sourceType":"script"}