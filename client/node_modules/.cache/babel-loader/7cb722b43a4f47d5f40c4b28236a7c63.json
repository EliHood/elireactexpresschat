{"ast":null,"code":"import _defineProperty from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/poweruser/Applications/nodework/eliappchat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/poweruser/Applications/nodework/eliappchat/client/src/Chat.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nimport SimpleStorage from \"react-simple-storage\";\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      username: '',\n      message: '',\n      disabled: false,\n      hide: 'hide',\n      intervalIsSet: false,\n      messages: [],\n      chatHistory: []\n    }; // this has to be something other than localhost.\n\n    _this.socket = socketIOClient.connect('https://gentle-crag-23071.herokuapp.com', {\n      secure: true\n    });\n\n    if (!_this.socket) {\n      _this.socket = socketIOClient('localhost:5000');\n    }\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n      var mymessage = _this.state.message;\n\n      if (mymessage.length !== 0) {\n        _this.socket.emit('SEND_MESSAGE', {\n          author: _this.state.username,\n          message: _this.state.message\n        });\n\n        _this.setState({\n          message: ''\n        });\n      }\n    };\n\n    _this.setUsername = function (ev) {\n      var username = _this.state.username;\n\n      _this.setState({\n        username: username,\n        disabled: !_this.state.disabled,\n        hide: 'hide'\n      });\n    };\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      var these_messages = _toConsumableArray(_this.state.messages).concat([data]);\n\n      _this.setState({\n        messages: these_messages\n      });\n\n      _this.state.chatHistory.push(these_messages);\n\n      localStorage.setItem('these_messages', JSON.stringify(_this.state.chatHistory));\n      localStorage.setItem('message', \"\");\n    }; // end of constructor\n\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"hydrateStateWithLocalStorage\",\n    value: function hydrateStateWithLocalStorage() {\n      // for all items in state\n      for (var key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n          // get the key's value from localStorage\n          var value = localStorage.getItem(key); // parse the localStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            this.setState(_defineProperty({}, key, value));\n          } catch (e) {\n            // handle empty string\n            this.setState(_defineProperty({}, key, value));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"saveStateToLocalStorage\",\n    value: function saveStateToLocalStorage() {\n      // for every item in React state\n      for (var key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage\n      // when user leaves/refreshes the page\n\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n      this.saveStateToLocalStorage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      return React.createElement(\"div\", {\n        className: \"chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"chat_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Chat Demo Still Unsure\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.messages.map(function (message, key) {\n        return React.createElement(\"div\", {\n          className: \"chat_text\",\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \" \", message.author, \": \", message.message);\n      }), React.createElement(SimpleStorage, {\n        parent: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \" Set Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            username: ev.target.value\n          });\n        },\n        disabled: this.state.disabled ? \"disabled\" : \"\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"button\", (_React$createElement = {\n        className: this.state.class,\n        onClick: this.setUsername\n      }, _defineProperty(_React$createElement, \"className\", \"btn btn-primary btn-sm mt-3\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), \"Set\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Message\",\n        required: true,\n        value: this.state.message,\n        onChange: function onChange(ev) {\n          return _this2.setState({\n            message: ev.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        className: \"btn btn-primary form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Send\"))))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/poweruser/Applications/nodework/eliappchat/client/src/Chat.js"],"names":["React","Component","socketIOClient","axios","SimpleStorage","Chat","props","state","username","message","disabled","hide","intervalIsSet","messages","chatHistory","socket","connect","secure","on","data","addMessage","sendMessage","ev","preventDefault","mymessage","length","emit","author","setState","setUsername","console","log","these_messages","push","localStorage","setItem","JSON","stringify","key","hasOwnProperty","value","getItem","parse","e","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","map","target","class"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nimport SimpleStorage from \"react-simple-storage\";\n\n\nclass Chat extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tusername: '', \n\t\t\tmessage: '',\n            disabled: false,\n            hide: 'hide',\n            intervalIsSet: false,\n\t\t\tmessages: [],\n            chatHistory: []\n\t\t};\n\n\n\n        // this has to be something other than localhost.\n\n\t   this.socket = socketIOClient.connect('https://gentle-crag-23071.herokuapp.com', {secure: true});\n\n\n\n\n       if(!this.socket){\n            this.socket = socketIOClient('localhost:5000');\n       }\n\n        this.socket.on('RECEIVE_MESSAGE', function(data){\n            addMessage(data);\n            \n        });\n\n\n        this.sendMessage = ev =>{\n            ev.preventDefault();\n\n            const mymessage = this.state.message\n\n            if(mymessage.length !== 0){\n\n                this.socket.emit('SEND_MESSAGE', {\n                    author: this.state.username,\n                    message: this.state.message\n                });\n\n                this.setState({message: ''});\n\n            }\n    \n        }\n\n\n\n        this.setUsername = ev => {\n\n            const username = this.state.username\n\n            this.setState( {\n                username: username,\n                disabled: !this.state.disabled,\n                hide: 'hide'\n\n            } );\n\n\n        }\n\n\n        const addMessage = data => {\n            console.log(data);\n\n            const these_messages = [...this.state.messages, data];\n            this.setState({ messages: these_messages  });\n\n            this.state.chatHistory.push(these_messages);\n            localStorage.setItem('these_messages', JSON.stringify(this.state.chatHistory));\n            localStorage.setItem('message', \"\");\n\n        };\n\n     // end of constructor\n    }\n\n\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n          // if the key exists in localStorage\n          if (localStorage.hasOwnProperty(key)) {\n            // get the key's value from localStorage\n            let value = localStorage.getItem(key);\n\n            // parse the localStorage string and setState\n            try {\n              value = JSON.parse(value);\n              this.setState({ [key]: value });\n            } catch (e) {\n              // handle empty string\n              this.setState({ [key]: value });\n            }\n          }\n        }\n    }\n\n    saveStateToLocalStorage() {\n    // for every item in React state\n        for (let key in this.state) {\n          // save to localStorage\n          localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    }\n\n    componentDidMount() {\n        this.hydrateStateWithLocalStorage();\n\n        // add event listener to save state to localStorage\n        // when user leaves/refreshes the page\n        window.addEventListener(\n          \"beforeunload\",\n          this.saveStateToLocalStorage.bind(this)\n        );\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\n          \"beforeunload\",\n          this.saveStateToLocalStorage.bind(this)\n        );\n\n        // saves if component has a chance to unmount\n        this.saveStateToLocalStorage();\n    }\n\n\n\n\t\n\n\n\n\n\n\n\n\trender(){\n\n\t\treturn(\n\n\n\n\t\t\t <div className=\"chat\">\n             <h3 className=\"chat_head\">Chat Demo Still Unsure</h3>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                \n                                <hr/>\n                                <div className=\"messages\">\n\n                                {this.state.messages.map((message, key) => {\n                                \treturn(\n                                \t\t<div className=\"chat_text\" key={key}> {message.author}: {message.message}</div>\n\n                                \t);\n                                })}\n                                     <SimpleStorage parent={this} />\n                                </div>\n                                \n                            </div>\n                            <div className=\"card-footer\">\n\n                                <h6> Set Username</h6>\n\n\n                                <input type=\"text\" \n                                placeholder=\"Username\" \n                                value={this.state.username} \n                                onChange={ev => this.setState({username: ev.target.value})} \n                                disabled = {(this.state.disabled)? \"disabled\" : \"\"}\n                                className=\"form-control\"/>\n                                <button className={this.state.class} onClick={this.setUsername} className=\"btn btn-primary btn-sm mt-3\">Set</button>\n                                <br/>\n\n                            </div>\n\n                            <div className=\"card-footer\">\n                            \n\n                                    <input type=\"text\" placeholder=\"Message\" required value={this.state.message} onChange={ev => this.setState({message: ev.target.value})} className=\"form-control\"/>\n                                    <br/>\n                                    <button  onClick={this.sendMessage} className=\"btn btn-primary form-control\">Send</button>\n                            </div>\n\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\t\t\n\n\t\t);\n\t}\n\n\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}